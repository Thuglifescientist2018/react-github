{"version":3,"sources":["components/repos.jsx","components/RepoDetail.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Repos","props","state","item","className","this","items","map","count","to","pathname","name","title","owner","login","React","Component","RepoDetail","useLocation","console","log","App","searchRepo","e","preventDefault","fetch","query","then","response","json","data","setState","target","value","firstFetch","action","htmlFor","type","placeholder","onChange","id","path","exact","element","onClick","nextPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAwCeA,E,kDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,KAAM,IAFJ,E,0CAInB,WACE,OACE,sBAAKC,UAAU,cAAf,UACE,+CACA,oBAAIA,UAAU,QAAd,SACGC,KAAKJ,MAAMK,MACVD,KAAKJ,MAAMK,MAAMC,KAAI,SAACJ,EAAMK,GAAP,OACnB,sBAAKJ,UAAU,OAAf,UACGI,EAAQ,EACT,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,eACTR,MAAOC,GAHX,SAME,6BAAKA,EAAKQ,SAGZ,eAAC,IAAD,CAAMF,GAAG,gBAAgBG,MAAM,+BAA/B,oBACUT,EAAKU,MAAMC,eAKzB,mE,GA7BQC,IAAMC,WCMXC,MAPf,WACE,IACQd,EADSe,cACShB,MAAlBC,KAGR,OAFAgB,QAAQC,IAAIjB,GAEL,qBAAKC,UAAU,gBCsETiB,E,kDAtEb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAmBRqB,WAAa,SAACC,GACZA,EAAEC,iBACFC,MAAM,gDAAD,OAC6C,EAAKvB,MAAMwB,MADxD,kBAGFC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACDA,EAAKxB,OACP,EAAKyB,SAAS,CAAEzB,MAAOwB,EAAKxB,WAGlC,EAAKyB,SAAS,CAAEL,MAAOH,EAAES,OAAOC,SA7BhC,EAAK/B,MAAQ,CACXI,MAAO,GACPoB,MAAO,OAJQ,E,qDAOnB,WACErB,KAAK6B,e,wBAEP,WAAc,IAAD,OACXT,MAAM,gDAAD,OAC6CpB,KAAKH,MAAMwB,MADxD,0BAGFC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLX,QAAQC,IAAIU,EAAKxB,OACjB,EAAKyB,SAAS,CAAEzB,MAAOwB,EAAKxB,a,oBAiBlC,WACE,OACE,cAAC,IAAD,UACE,qBAAKF,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBAAM+B,OAAO,GAAb,UACE,wBACE/B,UAAU,qBACVgC,QAAQ,mBAFV,mCAIyB,OAEzB,uBACEC,KAAK,OACLC,YAAY,yBACZC,SAAUlC,KAAKiB,WACfkB,GAAG,uBAGP,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,IACLC,OAAK,EACLC,QAAS,cAAC,EAAD,CAAOrC,MAAOD,KAAKH,MAAMI,UAEpC,cAAC,IAAD,CAAOmC,KAAK,eAAeE,QAAS,cAAC,EAAD,SAEtC,wBAAQC,QAASvC,KAAKwC,SAAtB,oC,GA/DI9B,IAAMC,WCMT8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e642dcdb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Repos extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { item: [] };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"RepoDetail2\">\r\n        <h1>List of repos</h1>\r\n        <ol className=\"repos\">\r\n          {this.props.items ? (\r\n            this.props.items.map((item, count) => (\r\n              <div className=\"repo\">\r\n                {count + 1}\r\n                <Link\r\n                  to={{\r\n                    pathname: `/repo-detail`,\r\n                    state: item,\r\n                  }}\r\n                >\r\n                  <h4>{item.name}</h4>\r\n                </Link>\r\n\r\n                <Link to=\"/repo-detail2\" title=\"Click here to show on github\">\r\n                  Owner: {item.owner.login}\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <h1> None of the Repos found</h1>\r\n          )}\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Repos;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nfunction RepoDetail() {\r\n  const location = useLocation();\r\n  const { item } = location.state;\r\n  console.log(item);\r\n\r\n  return <div className=\"RepoDetail\"></div>;\r\n}\r\nexport default RepoDetail;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { Route, Routes, BrowserRouter as Router } from \"react-router-dom\";\nimport Repos from \"./components/repos\";\nimport RepoDetail from \"./components/RepoDetail\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      query: \"you\",\n    };\n  }\n  componentDidMount() {\n    this.firstFetch();\n  }\n  firstFetch() {\n    fetch(\n      `https://api.github.com/search/repositories?q=${this.state.query} &page=1,&per_page=25`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.items);\n        this.setState({ items: data.items });\n      });\n  }\n  searchRepo = (e) => {\n    e.preventDefault();\n    fetch(\n      `https://api.github.com/search/repositories?q=${this.state.query} &per_page=25`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.items) {\n          this.setState({ items: data.items });\n        }\n      });\n    this.setState({ query: e.target.value });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <div className=\"user_input\">\n              <form action=\"\">\n                <label\n                  className=\"d-block text-white\"\n                  htmlFor=\"repo_name_input \"\n                >\n                  Enter repo name below:{\" \"}\n                </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"enter the name of repo\"\n                  onChange={this.searchRepo}\n                  id=\"repo_name_input\"\n                />\n              </form>\n              <Routes>\n                <Route\n                  path=\"/\"\n                  exact\n                  element={<Repos items={this.state.items} />}\n                />\n                <Route path=\"/repo-detail\" element={<RepoDetail />} />\n              </Routes>\n              <button onClick={this.nextPage}>Next Page</button>\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}